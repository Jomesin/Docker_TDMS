server {
	# 这个server标识我要配置了
	listen 80;
	# 我要监听那个端口
    server_name localhost;
	# 你访问的路径前面的url名称 
    access_log /var/log/nginx/access.log main;
	# Nginx日志配置
    charset utf-8;
	# Nginx编码
    gzip_types text/plain application/x-javascript text/css text/javascript application/x-httpd-php application/json text/json image/jpeg image/gif image/png application/octet-stream;
	# 支持压缩的类型
    client_max_body_size 120m;
    error_page 404 /404.html;
	# 错误页面
    error_page 500 502 503 504 /50x.html;
	# 接入监控
	# location /supplier {
	# 	include uwsgi_params;
	# 	# 导入一个Nginx模块他是用来和uWSGI进行通讯的
	# 	# 注意这儿，一般这三个配套修改
	# 	uwsgi_send_timeout 6000;        # 指定向uWSGI传送请求的超时时间，完成握手后向uWSGI传送请求的超时时间。
	# 	uwsgi_connect_timeout 6000;   # 指定连接到后端uWSGI的超时时间。
	# 	uwsgi_read_timeout 6000;        # 指定接收uWSGI应答的超时时间，完成握手后接收uWSGI应答的超时时间。
	# 	# 设置连接uWSGI超时时间
	# 	uwsgi_pass unix:/etc/uwsgi/supplier_uwsgi.sock;	
	# 	proxy_ignore_client_abort on;  # 服务器不会主动断开与客户端的连接
	# 	uwsgi_ignore_client_abort on;  # 服务器不会主动断开与客户端的连接
	# }

	# 指定静态文件路径
    location /static/ {
        alias /root/tdms/static/;
        index index.html index.htm;
    }

	# 指定项目路径uwsgi
    location / {
        include uwsgi_params;
        uwsgi_send_timeout 600;        # 指定向uWSGI传送请求的超时时间，完成握手后向uWSGI传送请求的超时时间。
        uwsgi_connect_timeout 600;   # 指定连接到后端uWSGI的超时时间。
       	uwsgi_read_timeout 600;        # 指定接收uWSGI应答的超时时间，完成握手后接收uWSGI应答的超时时间。
        uwsgi_pass unix:/root/uwsgi/uwsgi.sock;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
	}
	
}
